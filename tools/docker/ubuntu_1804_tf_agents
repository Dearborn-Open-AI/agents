# Multipurpose docker for building and running TF-Agents. This docker is
# designed for flexibility.
#
# Example usage:
#
#  Builds a docker with the most recent nightly version of TF-Agents.
#    docker build -t tf_agents/release_test \
#      -f ubuntu_1804_tf_agents .
#
#  Builds a docker without TF-Agents. Used to build TF-Agents.
#    docker build -t tf_agents/release_build \
#      --build-arg tensorflow_pip_spec=noop \
#      --build-arg tf_agents_pip_spec=noop \
#      -f tools/docker/ubuntu_1804_tf_agents .
#
#  Builds a docker with a local TF-Agents .whl file.
#    docker build -t tf_agents/release_test \
#      --build-arg local_tf_agents_pip_spec=tf_agents-0.4.0-py3-none-any.whl \
#      --build-arg tf_agents_pip_spec=tf_agents-0.4.0-py3-none-any.whl  \
#      -f ubuntu_1804_tf_agents .
#
FROM tensorflow/tensorflow:nightly-gpu as base

LABEL maintainer="Toby Boyd <tobyboyd@google.com>"
ARG tf_agents_pip_spec="tf-agents-nightly[reverb]"
ARG tensorflow_pip_spec="tf-nightly"
ARG local_tf_agents_pip_spec=""
ARG python_version="python3.7"
COPY ${local_tf_agents_pip_spec} ${local_tf_agents_pip_spec}

# See http://bugs.python.org/issue19846
ENV LANG C.UTF-8

# Resolves tzdata asking for the timezone. python-opencv depends on tzdata.
RUN ln -fs /usr/share/zoneinfo/America/Los_Angeles /etc/localtime
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata
RUN dpkg-reconfigure --frontend noninteractive tzdata

# Avoids "No module named six" coming from the keyrings module. This should not
# get triggered when using python3.7 vs. the default (python3) but it does.
RUN pip install --upgrade keyrings.alt

# Add google-cloud-sdk to the source list
# Nightly tests are on google cloud and need the SDK.
RUN echo "deb http://packages.cloud.google.com/apt cloud-sdk-$(lsb_release -c -s) main" | \
  tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
RUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

# Pick up some TF dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
      cmake \
      zlib1g-dev \
      libpng-dev \
      lsb-core \
      vim \
      less \
      git \
      ca-certificates \
      wget \
      zip \
      xvfb \
      freeglut3-dev \
      ffmpeg \
      python-opencv \
      python3.7-dev \
      google-cloud-sdk  # Only used for nightly testing.

RUN curl -O https://bootstrap.pypa.io/get-pip.py

RUN $python_version get-pip.py

# Removes default TensorFlow so a specific version can be installed.
RUN $python_version -m pip uninstall -y tensorflow tensorflow-gpu tf-nightly tf-nightly-gpu

RUN $python_version -m pip install ${tensorflow_pip_spec}
RUN $python_version -m pip install ${tf_agents_pip_spec}
RUN $python_version -m pip install wheel \
      opencv-python \
      gym \
      ale-py \
      atari-py \
      pybullet \
      gin-config \
      virtualenv \
      matplot \
      absl-py \
      mock \
# Only used for nightly testing.
      google-cloud-bigquery \
      psutil

######################################################
# Installs Jupyter notebook.
######################################################
RUN $python_version -m pip install jupyter
RUN $python_version -m pip install ipykernel

RUN $python_version -m pip freeze
